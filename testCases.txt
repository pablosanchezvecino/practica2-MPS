DequeNode
    Creación de nodo con todos los argumentos nulos
    Creación de nodo con todos los argumentos no nulos

    Establecer null como item de un nodo
    Establecer objeto no nulo como item de un nodo

    Establecer null como next de un nodo
    Establecer nodo no nulo como next de un nodo

    Establecer null como previous de un nodo
    Establecer nodo no nulo como previous de un nodo

    Obtener item de un nodo que tiene null como item
    Obtener item de un nodo que tiene un objeto no nulo como item

    Obtener next de un nodo que no tiene next
    Obtener next de un nodo que sí tiene next

    Obtener previous de un nodo que no tiene previous
    Obtener previous de un nodo que sí tiene previous

    isFirstNode() en nodo que no tiene previous -> true
    isFirstNode() en nodo que tiene previous -> false

    isLastNode() en nodo que no tiene next -> true
    isLastNode() en nodo que tiene next -> false

    isNotATerminalNode() en nodo sin previous ni next -> false
    isNotATerminalNode() en nodo que tiene previous, pero no next -> false
    isNotATerminalNode() en nodo que tiene next, pero no previous -> false
    isNotATerminalNode() en nodo que tiene previous y next -> true



DoubleLinkedListQueueTest

    Inicialización correcta de la cola

    size() con distintos tamaños

    Links (comprueba que previous y next son correctos para todos los nodos de la cola)

    appendLeft() partiendo de size = 0
    appendLeft() partiendo de size > 0
    appendLeft() con argumento null
    appendLeft() con un nodo que contiene null como item de argumento lanza IllegalArgumentException

    append() partiendo de size = 0
    append() partiendo de size > 0
    append() con argumento null lanza IllegalArgumentException
    append() con un nodo que contiene null como item de argumento lanza IllegalArgumentException

    deleteFirst() partiendo de size = 0
    deleteFirst() partiendo de size = 1
    deleteFirst() partiendo de size = 2
    deleteFirst() partiendo de size > 2

    deleteLast() partiendo de size = 0
    deleteLast() partiendo de size = 1
    deleteLast()  partiendo de size = 2
    deleteLast()  partiendo de size > 2

    getAt() con argumentos válidos
    getAt() con argumentos ni válidos lanza IllegalArgumentException

    find() con argumento null lanza IllegalArgumentException
    find() con argumentos válidos y presentes en la cola
    find() con argumentos válidos, pero no presentes en la cola devuelve null

    delete() con argumento null lanza IllegalArgumentException
    delete() de nodo presente en la cola intermedio (no es first ni last)
    delete() del único nodo de una cola
    delete() de first en una cola de dos elementos
    delete() de last en una cola de dos elementos
    delete() del primer nodo en una cola de más de un elemento
    delete() del último nodo en una cola de más de un elemento

    sort() con argumento null lanza IllegalArgumentException
    sort() con un Comparator válido








